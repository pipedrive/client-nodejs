/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { ListProductsResponse200AllOfDataInnerProduct } from './list-products-response200-all-of-data-inner-product';

/**
 * 
 * @export
 * @interface ListProductsResponse200AllOfDataInner
 */
export interface ListProductsResponse200AllOfDataInner {
    /**
     * The ID of the deal-product (the ID of the product attached to the deal)
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'id'?: number;
    /**
     * The ID of the deal
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'deal_id'?: number;
    /**
     * The order number of the product
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'order_nr'?: number;
    /**
     * The ID of the product
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'product_id'?: number;
    /**
     * The ID of the product variation
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'product_variation_id'?: number | null;
    /**
     * The price value of the product
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'item_price'?: number;
    /**
     * The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage.
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'discount'?: number;
    /**
     * The type of the discount\'s value.
     * @type {string}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'discount_type'?: ListProductsResponse200AllOfDataInnerDiscountTypeConst;
    /**
     * The duration of the product
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'duration'?: number;
    /**
     * The type of the duration. (For example hourly, daily, etc.)
     * @type {string}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'duration_unit'?: string;
    /**
     * The sum of all the products attached to the deal
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'sum'?: number;
    /**
     * The currency associated with the deal product
     * @type {string}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'currency'?: string;
    /**
     * Whether the product is enabled or not
     * @type {boolean}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'enabled_flag'?: boolean;
    /**
     * The date and time when the product was added to the deal
     * @type {string}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'add_time'?: string;
    /**
     * The date and time when the deal product was last edited
     * @type {string}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'last_edit'?: string;
    /**
     * The comments of the product
     * @type {string}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'comments'?: string;
    /**
     * Whether the product is active or not
     * @type {boolean}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'active_flag'?: boolean;
    /**
     * The product tax
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'tax'?: number;
    /**
     * The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal.
     * @type {string}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'tax_method'?: ListProductsResponse200AllOfDataInnerTaxMethodConst;
    /**
     * The product name
     * @type {string}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'name'?: string;
    /**
     * The formatted sum of the product
     * @type {string}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'sum_formatted'?: string;
    /**
     * The formatted quantity of the product
     * @type {string}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'quantity_formatted'?: string;
    /**
     * The quantity of the product
     * @type {number}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'quantity'?: number;
    /**
     * 
     * @type {ListProductsResponse200AllOfDataInnerProduct}
     * @memberof ListProductsResponse200AllOfDataInner
     */
    'product'?: ListProductsResponse200AllOfDataInnerProduct;
}

export const ListProductsResponse200AllOfDataInnerDiscountTypeConst = {
    percentage: 'percentage',
    amount: 'amount'
} as const;

export type ListProductsResponse200AllOfDataInnerDiscountTypeConst = typeof ListProductsResponse200AllOfDataInnerDiscountTypeConst[keyof typeof ListProductsResponse200AllOfDataInnerDiscountTypeConst];
export const ListProductsResponse200AllOfDataInnerTaxMethodConst = {
    exclusive: 'exclusive',
    inclusive: 'inclusive',
    none: 'none'
} as const;

export type ListProductsResponse200AllOfDataInnerTaxMethodConst = typeof ListProductsResponse200AllOfDataInnerTaxMethodConst[keyof typeof ListProductsResponse200AllOfDataInnerTaxMethodConst];


