/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface Field
 */
export interface Field {
    /**
     * The ID of the field. Value is `null` in case of subfields.
     * @type {number}
     * @memberof Field
     */
    'id'?: number;
    /**
     * The key of the field. For custom fields this is generated upon creation.
     * @type {string}
     * @memberof Field
     */
    'key'?: string;
    /**
     * The name of the field
     * @type {string}
     * @memberof Field
     */
    'name'?: string;
    /**
     * The order number of the field
     * @type {number}
     * @memberof Field
     */
    'order_nr'?: number;
    /**
     * The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item\'s visibility setting</td></tr></table>
     * @type {string}
     * @memberof Field
     */
    'field_type'?: FieldFieldTypeConst;
    /**
     * The creation time of the field
     * @type {string}
     * @memberof Field
     */
    'add_time'?: string;
    /**
     * The update time of the field
     * @type {string}
     * @memberof Field
     */
    'update_time'?: string;
    /**
     * The ID of the user who created or most recently updated the field, only applicable for custom fields
     * @type {number}
     * @memberof Field
     */
    'last_updated_by_user_id'?: number;
    /**
     * The ID of the user who created the field
     * @type {number}
     * @memberof Field
     */
    'created_by_user_id'?: number;
    /**
     * The active flag of the field
     * @type {boolean}
     * @memberof Field
     */
    'active_flag'?: boolean;
    /**
     * The edit flag of the field
     * @type {boolean}
     * @memberof Field
     */
    'edit_flag'?: boolean;
    /**
     * Not used
     * @type {boolean}
     * @memberof Field
     */
    'index_visible_flag'?: boolean;
    /**
     * Not used
     * @type {boolean}
     * @memberof Field
     */
    'details_visible_flag'?: boolean;
    /**
     * Not used
     * @type {boolean}
     * @memberof Field
     */
    'add_visible_flag'?: boolean;
    /**
     * Not used
     * @type {boolean}
     * @memberof Field
     */
    'important_flag'?: boolean;
    /**
     * Whether or not the field of an item can be edited in bulk
     * @type {boolean}
     * @memberof Field
     */
    'bulk_edit_allowed'?: boolean;
    /**
     * Whether or not items can be searched by this field
     * @type {boolean}
     * @memberof Field
     */
    'searchable_flag'?: boolean;
    /**
     * Whether or not items can be filtered by this field
     * @type {boolean}
     * @memberof Field
     */
    'filtering_allowed'?: boolean;
    /**
     * Whether or not items can be sorted by this field
     * @type {boolean}
     * @memberof Field
     */
    'sortable_flag'?: boolean;
    /**
     * Whether or not the field is mandatory
     * @type {boolean}
     * @memberof Field
     */
    'mandatory_flag'?: boolean;
    /**
     * The options of the field. When there are no options, `null` is returned.
     * @type {Array<object>}
     * @memberof Field
     */
    'options'?: Array<object> | null;
    /**
     * The deleted options of the field. Only present when there is at least 1 deleted option.
     * @type {Array<object>}
     * @memberof Field
     */
    'options_deleted'?: Array<object>;
    /**
     * Whether or not the field is a subfield of another field. Only present if field is subfield.
     * @type {boolean}
     * @memberof Field
     */
    'is_subfield'?: boolean;
    /**
     * The subfields of the field. Only present when the field has subfields.
     * @type {Array<object>}
     * @memberof Field
     */
    'subfields'?: Array<object>;
}

export const FieldFieldTypeConst = {
    address: 'address',
    date: 'date',
    daterange: 'daterange',
    double: 'double',
    enum: 'enum',
    monetary: 'monetary',
    org: 'org',
    people: 'people',
    phone: 'phone',
    set: 'set',
    text: 'text',
    time: 'time',
    timerange: 'timerange',
    user: 'user',
    varchar: 'varchar',
    varchar_auto: 'varchar_auto',
    visible_to: 'visible_to'
} as const;

export type FieldFieldTypeConst = typeof FieldFieldTypeConst[keyof typeof FieldFieldTypeConst];


