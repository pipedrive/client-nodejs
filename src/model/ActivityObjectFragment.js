/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActivityObjectFragment model module.
 * @module model/ActivityObjectFragment
 * @version 1.0.0
 */
class ActivityObjectFragment {
    /**
     * Constructs a new <code>ActivityObjectFragment</code>.
     * @alias module:model/ActivityObjectFragment
     */
    constructor() { 
        
        ActivityObjectFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActivityObjectFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityObjectFragment} obj Optional instance to populate.
     * @return {module:model/ActivityObjectFragment} The populated <code>ActivityObjectFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityObjectFragment();

            if (data.hasOwnProperty('due_date')) {
                obj['due_date'] = ApiClient.convertToType(data['due_date'], 'Date');

                delete data['due_date'];
            }
            if (data.hasOwnProperty('due_time')) {
                obj['due_time'] = ApiClient.convertToType(data['due_time'], 'String');

                delete data['due_time'];
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');

                delete data['duration'];
            }
            if (data.hasOwnProperty('deal_id')) {
                obj['deal_id'] = ApiClient.convertToType(data['deal_id'], 'Number');

                delete data['deal_id'];
            }
            if (data.hasOwnProperty('person_id')) {
                obj['person_id'] = ApiClient.convertToType(data['person_id'], 'Number');

                delete data['person_id'];
            }
            if (data.hasOwnProperty('org_id')) {
                obj['org_id'] = ApiClient.convertToType(data['org_id'], 'Number');

                delete data['org_id'];
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');

                delete data['note'];
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');

                delete data['location'];
            }
            if (data.hasOwnProperty('public_description')) {
                obj['public_description'] = ApiClient.convertToType(data['public_description'], 'String');

                delete data['public_description'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * The due date of the activity. Format: YYYY-MM-DD
 * @member {Date} due_date
 */
ActivityObjectFragment.prototype['due_date'] = undefined;

/**
 * The due time of the activity in UTC. Format: HH:MM
 * @member {String} due_time
 */
ActivityObjectFragment.prototype['due_time'] = undefined;

/**
 * The duration of the activity. Format: HH:MM
 * @member {String} duration
 */
ActivityObjectFragment.prototype['duration'] = undefined;

/**
 * The ID of the deal this activity is associated with
 * @member {Number} deal_id
 */
ActivityObjectFragment.prototype['deal_id'] = undefined;

/**
 * The ID of the person this activity is associated with
 * @member {Number} person_id
 */
ActivityObjectFragment.prototype['person_id'] = undefined;

/**
 * The ID of the organization this activity is associated with
 * @member {Number} org_id
 */
ActivityObjectFragment.prototype['org_id'] = undefined;

/**
 * The note of the activity (HTML format)
 * @member {String} note
 */
ActivityObjectFragment.prototype['note'] = undefined;

/**
 * The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
 * @member {String} location
 */
ActivityObjectFragment.prototype['location'] = undefined;

/**
 * Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
 * @member {String} public_description
 */
ActivityObjectFragment.prototype['public_description'] = undefined;






export default ActivityObjectFragment;

