/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChangelogResponseAllOfData model module.
 * @module model/ChangelogResponseAllOfData
 * @version 1.0.0
 */
class ChangelogResponseAllOfData {
    /**
     * Constructs a new <code>ChangelogResponseAllOfData</code>.
     * @alias module:model/ChangelogResponseAllOfData
     */
    constructor() { 
        
        ChangelogResponseAllOfData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChangelogResponseAllOfData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChangelogResponseAllOfData} obj Optional instance to populate.
     * @return {module:model/ChangelogResponseAllOfData} The populated <code>ChangelogResponseAllOfData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChangelogResponseAllOfData();

            if (data.hasOwnProperty('field_key')) {
                obj['field_key'] = ApiClient.convertToType(data['field_key'], 'String');

                delete data['field_key'];
            }
            if (data.hasOwnProperty('old_value')) {
                obj['old_value'] = ApiClient.convertToType(data['old_value'], 'String');

                delete data['old_value'];
            }
            if (data.hasOwnProperty('new_value')) {
                obj['new_value'] = ApiClient.convertToType(data['new_value'], 'String');

                delete data['new_value'];
            }
            if (data.hasOwnProperty('actor_user_id')) {
                obj['actor_user_id'] = ApiClient.convertToType(data['actor_user_id'], 'Number');

                delete data['actor_user_id'];
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');

                delete data['time'];
            }
            if (data.hasOwnProperty('change_source')) {
                obj['change_source'] = ApiClient.convertToType(data['change_source'], 'String');

                delete data['change_source'];
            }
            if (data.hasOwnProperty('change_source_user_agent')) {
                obj['change_source_user_agent'] = ApiClient.convertToType(data['change_source_user_agent'], 'String');

                delete data['change_source_user_agent'];
            }
            if (data.hasOwnProperty('is_bulk_update_flag')) {
                obj['is_bulk_update_flag'] = ApiClient.convertToType(data['is_bulk_update_flag'], 'Boolean');

                delete data['is_bulk_update_flag'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * The key of the field that was changed
 * @member {String} field_key
 */
ChangelogResponseAllOfData.prototype['field_key'] = undefined;

/**
 * The value of the field before the change
 * @member {String} old_value
 */
ChangelogResponseAllOfData.prototype['old_value'] = undefined;

/**
 * The value of the field after the change
 * @member {String} new_value
 */
ChangelogResponseAllOfData.prototype['new_value'] = undefined;

/**
 * The ID of the user who made the change
 * @member {Number} actor_user_id
 */
ChangelogResponseAllOfData.prototype['actor_user_id'] = undefined;

/**
 * The date and time of the change
 * @member {String} time
 */
ChangelogResponseAllOfData.prototype['time'] = undefined;

/**
 * The source of change, for example 'app', 'mobile', 'api', etc.
 * @member {String} change_source
 */
ChangelogResponseAllOfData.prototype['change_source'] = undefined;

/**
 * The user agent from which the change was made
 * @member {String} change_source_user_agent
 */
ChangelogResponseAllOfData.prototype['change_source_user_agent'] = undefined;

/**
 * Whether the change was made as part of a bulk update
 * @member {Boolean} is_bulk_update_flag
 */
ChangelogResponseAllOfData.prototype['is_bulk_update_flag'] = undefined;






export default ChangelogResponseAllOfData;

