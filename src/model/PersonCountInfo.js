/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PersonCountInfo model module.
 * @module model/PersonCountInfo
 * @version 1.0.0
 */
class PersonCountInfo {
    /**
     * Constructs a new <code>PersonCountInfo</code>.
     * @alias module:model/PersonCountInfo
     */
    constructor() { 
        
        PersonCountInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PersonCountInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PersonCountInfo} obj Optional instance to populate.
     * @return {module:model/PersonCountInfo} The populated <code>PersonCountInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PersonCountInfo();

            if (data.hasOwnProperty('email_messages_count')) {
                obj['email_messages_count'] = ApiClient.convertToType(data['email_messages_count'], 'Number');

                delete data['email_messages_count'];
            }
            if (data.hasOwnProperty('activities_count')) {
                obj['activities_count'] = ApiClient.convertToType(data['activities_count'], 'Number');

                delete data['activities_count'];
            }
            if (data.hasOwnProperty('done_activities_count')) {
                obj['done_activities_count'] = ApiClient.convertToType(data['done_activities_count'], 'Number');

                delete data['done_activities_count'];
            }
            if (data.hasOwnProperty('undone_activities_count')) {
                obj['undone_activities_count'] = ApiClient.convertToType(data['undone_activities_count'], 'Number');

                delete data['undone_activities_count'];
            }
            if (data.hasOwnProperty('files_count')) {
                obj['files_count'] = ApiClient.convertToType(data['files_count'], 'Number');

                delete data['files_count'];
            }
            if (data.hasOwnProperty('notes_count')) {
                obj['notes_count'] = ApiClient.convertToType(data['notes_count'], 'Number');

                delete data['notes_count'];
            }
            if (data.hasOwnProperty('followers_count')) {
                obj['followers_count'] = ApiClient.convertToType(data['followers_count'], 'Number');

                delete data['followers_count'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * The count of email messages related to the person
 * @member {Number} email_messages_count
 */
PersonCountInfo.prototype['email_messages_count'] = undefined;

/**
 * The count of activities related to the person
 * @member {Number} activities_count
 */
PersonCountInfo.prototype['activities_count'] = undefined;

/**
 * The count of done activities related to the person
 * @member {Number} done_activities_count
 */
PersonCountInfo.prototype['done_activities_count'] = undefined;

/**
 * The count of undone activities related to the person
 * @member {Number} undone_activities_count
 */
PersonCountInfo.prototype['undone_activities_count'] = undefined;

/**
 * The count of files related to the person
 * @member {Number} files_count
 */
PersonCountInfo.prototype['files_count'] = undefined;

/**
 * The count of notes related to the person
 * @member {Number} notes_count
 */
PersonCountInfo.prototype['notes_count'] = undefined;

/**
 * The count of followers related to the person
 * @member {Number} followers_count
 */
PersonCountInfo.prototype['followers_count'] = undefined;






export default PersonCountInfo;

