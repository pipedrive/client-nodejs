/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdditionalData from './AdditionalData';
import ListPersonsResponseAllOfRelatedObjects from './ListPersonsResponseAllOfRelatedObjects';
import PersonItem from './PersonItem';

/**
 * The ListPersonsResponseAllOf model module.
 * @module model/ListPersonsResponseAllOf
 * @version 1.0.0
 */
class ListPersonsResponseAllOf {
    /**
     * Constructs a new <code>ListPersonsResponseAllOf</code>.
     * @alias module:model/ListPersonsResponseAllOf
     */
    constructor() { 
        
        ListPersonsResponseAllOf.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListPersonsResponseAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListPersonsResponseAllOf} obj Optional instance to populate.
     * @return {module:model/ListPersonsResponseAllOf} The populated <code>ListPersonsResponseAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListPersonsResponseAllOf();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [PersonItem]);

                delete data['data'];
            }
            if (data.hasOwnProperty('additional_data')) {
                obj['additional_data'] = AdditionalData.constructFromObject(data['additional_data']);

                delete data['additional_data'];
            }
            if (data.hasOwnProperty('related_objects')) {
                obj['related_objects'] = ListPersonsResponseAllOfRelatedObjects.constructFromObject(data['related_objects']);

                delete data['related_objects'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * The array of persons
 * @member {Array.<module:model/PersonItem>} data
 */
ListPersonsResponseAllOf.prototype['data'] = undefined;

/**
 * @member {module:model/AdditionalData} additional_data
 */
ListPersonsResponseAllOf.prototype['additional_data'] = undefined;

/**
 * @member {module:model/ListPersonsResponseAllOfRelatedObjects} related_objects
 */
ListPersonsResponseAllOf.prototype['related_objects'] = undefined;






export default ListPersonsResponseAllOf;

