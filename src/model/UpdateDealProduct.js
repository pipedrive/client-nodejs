/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DealProductUnitDuration from './DealProductUnitDuration';

/**
 * The UpdateDealProduct model module.
 * @module model/UpdateDealProduct
 * @version 1.0.0
 */
class UpdateDealProduct {
    /**
     * Constructs a new <code>UpdateDealProduct</code>.
     * @alias module:model/UpdateDealProduct
     * @param productId {Number} The ID of the product to use
     */
    constructor(productId) { 
        
        UpdateDealProduct.initialize(this, productId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, productId) { 
        obj['product_id'] = productId;
    }

    /**
     * Constructs a <code>UpdateDealProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDealProduct} obj Optional instance to populate.
     * @return {module:model/UpdateDealProduct} The populated <code>UpdateDealProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDealProduct();

            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');

                delete data['product_id'];
            }
            if (data.hasOwnProperty('item_price')) {
                obj['item_price'] = ApiClient.convertToType(data['item_price'], 'Number');

                delete data['item_price'];
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');

                delete data['quantity'];
            }
            if (data.hasOwnProperty('discount_percentage')) {
                obj['discount_percentage'] = ApiClient.convertToType(data['discount_percentage'], 'Number');

                delete data['discount_percentage'];
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');

                delete data['duration'];
            }
            if (data.hasOwnProperty('duration_unit')) {
                obj['duration_unit'] = ApiClient.convertToType(data['duration_unit'], DealProductUnitDuration);

                delete data['duration_unit'];
            }
            if (data.hasOwnProperty('product_variation_id')) {
                obj['product_variation_id'] = ApiClient.convertToType(data['product_variation_id'], 'Number');

                delete data['product_variation_id'];
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');

                delete data['comments'];
            }
            if (data.hasOwnProperty('tax')) {
                obj['tax'] = ApiClient.convertToType(data['tax'], 'Number');

                delete data['tax'];
            }
            if (data.hasOwnProperty('enabled_flag')) {
                obj['enabled_flag'] = ApiClient.convertToType(data['enabled_flag'], 'Boolean');

                delete data['enabled_flag'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * The ID of the product to use
 * @member {Number} product_id
 */
UpdateDealProduct.prototype['product_id'] = undefined;

/**
 * The price at which this product will be added to the deal
 * @member {Number} item_price
 */
UpdateDealProduct.prototype['item_price'] = undefined;

/**
 * How many items of this product will be added to the deal
 * @member {Number} quantity
 */
UpdateDealProduct.prototype['quantity'] = undefined;

/**
 * The discount %. If omitted, will be set to 0.
 * @member {Number} discount_percentage
 * @default 0
 */
UpdateDealProduct.prototype['discount_percentage'] = 0;

/**
 * The duration of the product
 * @member {Number} duration
 * @default 1
 */
UpdateDealProduct.prototype['duration'] = 1;

/**
 * The unit duration of the product
 * @member {module:model/DealProductUnitDuration} duration_unit
 */
UpdateDealProduct.prototype['duration_unit'] = undefined;

/**
 * The ID of the product variation to use. When omitted, no variation will be used.
 * @member {Number} product_variation_id
 */
UpdateDealProduct.prototype['product_variation_id'] = undefined;

/**
 * A textual comment associated with this product-deal attachment
 * @member {String} comments
 */
UpdateDealProduct.prototype['comments'] = undefined;

/**
 * The tax percentage
 * @member {Number} tax
 * @default 0
 */
UpdateDealProduct.prototype['tax'] = 0;

/**
 * Whether the product is enabled for a deal or not. This makes it possible to add products to a deal with a specific price and discount criteria, but keep them disabled, which refrains them from being included in the deal value calculation. When omitted, the product will be marked as enabled by default.
 * @member {Boolean} enabled_flag
 * @default true
 */
UpdateDealProduct.prototype['enabled_flag'] = true;






export default UpdateDealProduct;

