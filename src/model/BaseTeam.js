/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NumberBoolean from './NumberBoolean';
import TeamId from './TeamId';
import UpdateTeamWithAdditionalProperties from './UpdateTeamWithAdditionalProperties';

/**
 * The BaseTeam model module.
 * @module model/BaseTeam
 * @version 1.0.0
 */
class BaseTeam {
    /**
     * Constructs a new <code>BaseTeam</code>.
     * @alias module:model/BaseTeam
     * @implements module:model/TeamId
     * @implements module:model/UpdateTeamWithAdditionalProperties
     * @param name {String} The team name
     * @param managerId {Number} The team manager ID
     */
    constructor(name, managerId) { 
        TeamId.initialize(this);UpdateTeamWithAdditionalProperties.initialize(this, name, managerId);
        BaseTeam.initialize(this, name, managerId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, managerId) { 
        obj['name'] = name;
        obj['manager_id'] = managerId;
    }

    /**
     * Constructs a <code>BaseTeam</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseTeam} obj Optional instance to populate.
     * @return {module:model/BaseTeam} The populated <code>BaseTeam</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BaseTeam();
            TeamId.constructFromObject(data, obj);
            UpdateTeamWithAdditionalProperties.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');

                delete data['id'];
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');

                delete data['name'];
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');

                delete data['description'];
            }
            if (data.hasOwnProperty('manager_id')) {
                obj['manager_id'] = ApiClient.convertToType(data['manager_id'], 'Number');

                delete data['manager_id'];
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], ['Number']);

                delete data['users'];
            }
            if (data.hasOwnProperty('active_flag')) {
                obj['active_flag'] = ApiClient.convertToType(data['active_flag'], NumberBoolean);

                delete data['active_flag'];
            }
            if (data.hasOwnProperty('deleted_flag')) {
                obj['deleted_flag'] = ApiClient.convertToType(data['deleted_flag'], NumberBoolean);

                delete data['deleted_flag'];
            }
            if (data.hasOwnProperty('add_time')) {
                obj['add_time'] = ApiClient.convertToType(data['add_time'], 'String');

                delete data['add_time'];
            }
            if (data.hasOwnProperty('created_by_user_id')) {
                obj['created_by_user_id'] = ApiClient.convertToType(data['created_by_user_id'], 'Number');

                delete data['created_by_user_id'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * The team ID
 * @member {Number} id
 */
BaseTeam.prototype['id'] = undefined;

/**
 * The team name
 * @member {String} name
 */
BaseTeam.prototype['name'] = undefined;

/**
 * The team description
 * @member {String} description
 */
BaseTeam.prototype['description'] = undefined;

/**
 * The team manager ID
 * @member {Number} manager_id
 */
BaseTeam.prototype['manager_id'] = undefined;

/**
 * The list of user IDs
 * @member {Array.<Number>} users
 */
BaseTeam.prototype['users'] = undefined;

/**
 * Flag that indicates whether the team is active
 * @member {module:model/NumberBoolean} active_flag
 */
BaseTeam.prototype['active_flag'] = undefined;

/**
 * Flag that indicates whether the team is deleted
 * @member {module:model/NumberBoolean} deleted_flag
 */
BaseTeam.prototype['deleted_flag'] = undefined;

/**
 * The team creation time. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} add_time
 */
BaseTeam.prototype['add_time'] = undefined;

/**
 * The ID of the user who created the team
 * @member {Number} created_by_user_id
 */
BaseTeam.prototype['created_by_user_id'] = undefined;


// Implement TeamId interface:
/**
 * The team ID
 * @member {Number} id
 */
TeamId.prototype['id'] = undefined;
// Implement UpdateTeamWithAdditionalProperties interface:
/**
 * The team name
 * @member {String} name
 */
UpdateTeamWithAdditionalProperties.prototype['name'] = undefined;
/**
 * The team description
 * @member {String} description
 */
UpdateTeamWithAdditionalProperties.prototype['description'] = undefined;
/**
 * The team manager ID
 * @member {Number} manager_id
 */
UpdateTeamWithAdditionalProperties.prototype['manager_id'] = undefined;
/**
 * The list of user IDs
 * @member {Array.<Number>} users
 */
UpdateTeamWithAdditionalProperties.prototype['users'] = undefined;
/**
 * Flag that indicates whether the team is active
 * @member {module:model/NumberBoolean} active_flag
 */
UpdateTeamWithAdditionalProperties.prototype['active_flag'] = undefined;
/**
 * Flag that indicates whether the team is deleted
 * @member {module:model/NumberBoolean} deleted_flag
 */
UpdateTeamWithAdditionalProperties.prototype['deleted_flag'] = undefined;
/**
 * The team creation time. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} add_time
 */
UpdateTeamWithAdditionalProperties.prototype['add_time'] = undefined;
/**
 * The ID of the user who created the team
 * @member {Number} created_by_user_id
 */
UpdateTeamWithAdditionalProperties.prototype['created_by_user_id'] = undefined;




export default BaseTeam;

