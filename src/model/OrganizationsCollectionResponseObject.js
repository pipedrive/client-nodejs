/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrganizationAddressInfo from './OrganizationAddressInfo';
import OrganizationsCollectionResponseObjectAllOf from './OrganizationsCollectionResponseObjectAllOf';

/**
 * The OrganizationsCollectionResponseObject model module.
 * @module model/OrganizationsCollectionResponseObject
 * @version 1.0.0
 */
class OrganizationsCollectionResponseObject {
    /**
     * Constructs a new <code>OrganizationsCollectionResponseObject</code>.
     * @alias module:model/OrganizationsCollectionResponseObject
     * @implements module:model/OrganizationAddressInfo
     * @implements module:model/OrganizationsCollectionResponseObjectAllOf
     */
    constructor() { 
        OrganizationAddressInfo.initialize(this);OrganizationsCollectionResponseObjectAllOf.initialize(this);
        OrganizationsCollectionResponseObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrganizationsCollectionResponseObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationsCollectionResponseObject} obj Optional instance to populate.
     * @return {module:model/OrganizationsCollectionResponseObject} The populated <code>OrganizationsCollectionResponseObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationsCollectionResponseObject();
            OrganizationAddressInfo.constructFromObject(data, obj);
            OrganizationsCollectionResponseObjectAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');

                delete data['address'];
            }
            if (data.hasOwnProperty('address_subpremise')) {
                obj['address_subpremise'] = ApiClient.convertToType(data['address_subpremise'], 'String');

                delete data['address_subpremise'];
            }
            if (data.hasOwnProperty('address_street_number')) {
                obj['address_street_number'] = ApiClient.convertToType(data['address_street_number'], 'String');

                delete data['address_street_number'];
            }
            if (data.hasOwnProperty('address_route')) {
                obj['address_route'] = ApiClient.convertToType(data['address_route'], 'String');

                delete data['address_route'];
            }
            if (data.hasOwnProperty('address_sublocality')) {
                obj['address_sublocality'] = ApiClient.convertToType(data['address_sublocality'], 'String');

                delete data['address_sublocality'];
            }
            if (data.hasOwnProperty('address_locality')) {
                obj['address_locality'] = ApiClient.convertToType(data['address_locality'], 'String');

                delete data['address_locality'];
            }
            if (data.hasOwnProperty('address_admin_area_level_1')) {
                obj['address_admin_area_level_1'] = ApiClient.convertToType(data['address_admin_area_level_1'], 'String');

                delete data['address_admin_area_level_1'];
            }
            if (data.hasOwnProperty('address_admin_area_level_2')) {
                obj['address_admin_area_level_2'] = ApiClient.convertToType(data['address_admin_area_level_2'], 'String');

                delete data['address_admin_area_level_2'];
            }
            if (data.hasOwnProperty('address_country')) {
                obj['address_country'] = ApiClient.convertToType(data['address_country'], 'String');

                delete data['address_country'];
            }
            if (data.hasOwnProperty('address_postal_code')) {
                obj['address_postal_code'] = ApiClient.convertToType(data['address_postal_code'], 'String');

                delete data['address_postal_code'];
            }
            if (data.hasOwnProperty('address_formatted_address')) {
                obj['address_formatted_address'] = ApiClient.convertToType(data['address_formatted_address'], 'String');

                delete data['address_formatted_address'];
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');

                delete data['id'];
            }
            if (data.hasOwnProperty('active_flag')) {
                obj['active_flag'] = ApiClient.convertToType(data['active_flag'], 'Boolean');

                delete data['active_flag'];
            }
            if (data.hasOwnProperty('owner_id')) {
                obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'Number');

                delete data['owner_id'];
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');

                delete data['name'];
            }
            if (data.hasOwnProperty('update_time')) {
                obj['update_time'] = ApiClient.convertToType(data['update_time'], 'String');

                delete data['update_time'];
            }
            if (data.hasOwnProperty('delete_time')) {
                obj['delete_time'] = ApiClient.convertToType(data['delete_time'], 'String');

                delete data['delete_time'];
            }
            if (data.hasOwnProperty('add_time')) {
                obj['add_time'] = ApiClient.convertToType(data['add_time'], 'String');

                delete data['add_time'];
            }
            if (data.hasOwnProperty('visible_to')) {
                obj['visible_to'] = ApiClient.convertToType(data['visible_to'], 'String');

                delete data['visible_to'];
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'Number');

                delete data['label'];
            }
            if (data.hasOwnProperty('label_ids')) {
                obj['label_ids'] = ApiClient.convertToType(data['label_ids'], ['Number']);

                delete data['label_ids'];
            }
            if (data.hasOwnProperty('cc_email')) {
                obj['cc_email'] = ApiClient.convertToType(data['cc_email'], 'String');

                delete data['cc_email'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * The full address of the organization
 * @member {String} address
 */
OrganizationsCollectionResponseObject.prototype['address'] = undefined;

/**
 * The sub-premise of the organization location
 * @member {String} address_subpremise
 */
OrganizationsCollectionResponseObject.prototype['address_subpremise'] = undefined;

/**
 * The street number of the organization location
 * @member {String} address_street_number
 */
OrganizationsCollectionResponseObject.prototype['address_street_number'] = undefined;

/**
 * The route of the organization location
 * @member {String} address_route
 */
OrganizationsCollectionResponseObject.prototype['address_route'] = undefined;

/**
 * The sub-locality of the organization location
 * @member {String} address_sublocality
 */
OrganizationsCollectionResponseObject.prototype['address_sublocality'] = undefined;

/**
 * The locality of the organization location
 * @member {String} address_locality
 */
OrganizationsCollectionResponseObject.prototype['address_locality'] = undefined;

/**
 * The level 1 admin area of the organization location
 * @member {String} address_admin_area_level_1
 */
OrganizationsCollectionResponseObject.prototype['address_admin_area_level_1'] = undefined;

/**
 * The level 2 admin area of the organization location
 * @member {String} address_admin_area_level_2
 */
OrganizationsCollectionResponseObject.prototype['address_admin_area_level_2'] = undefined;

/**
 * The country of the organization location
 * @member {String} address_country
 */
OrganizationsCollectionResponseObject.prototype['address_country'] = undefined;

/**
 * The postal code of the organization location
 * @member {String} address_postal_code
 */
OrganizationsCollectionResponseObject.prototype['address_postal_code'] = undefined;

/**
 * The formatted organization location
 * @member {String} address_formatted_address
 */
OrganizationsCollectionResponseObject.prototype['address_formatted_address'] = undefined;

/**
 * The ID of the organization
 * @member {Number} id
 */
OrganizationsCollectionResponseObject.prototype['id'] = undefined;

/**
 * Whether the organization is active or not
 * @member {Boolean} active_flag
 */
OrganizationsCollectionResponseObject.prototype['active_flag'] = undefined;

/**
 * The ID of the owner
 * @member {Number} owner_id
 */
OrganizationsCollectionResponseObject.prototype['owner_id'] = undefined;

/**
 * The name of the organization
 * @member {String} name
 */
OrganizationsCollectionResponseObject.prototype['name'] = undefined;

/**
 * The last updated date and time of the organization. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} update_time
 */
OrganizationsCollectionResponseObject.prototype['update_time'] = undefined;

/**
 * The date and time this organization was deleted. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} delete_time
 */
OrganizationsCollectionResponseObject.prototype['delete_time'] = undefined;

/**
 * The date and time when the organization was added/created. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} add_time
 */
OrganizationsCollectionResponseObject.prototype['add_time'] = undefined;

/**
 * The visibility group ID of who can see the organization
 * @member {String} visible_to
 */
OrganizationsCollectionResponseObject.prototype['visible_to'] = undefined;

/**
 * The label assigned to the organization. When the `label` field is updated, the `label_ids` field value will be overwritten by the `label` field value.
 * @member {Number} label
 */
OrganizationsCollectionResponseObject.prototype['label'] = undefined;

/**
 * The IDs of labels assigned to the organization. When the `label_ids` field is updated, the `label` field value will be set to the first value of the `label_ids` field.
 * @member {Array.<Number>} label_ids
 */
OrganizationsCollectionResponseObject.prototype['label_ids'] = undefined;

/**
 * The BCC email associated with the organization
 * @member {String} cc_email
 */
OrganizationsCollectionResponseObject.prototype['cc_email'] = undefined;


// Implement OrganizationAddressInfo interface:
/**
 * The full address of the organization
 * @member {String} address
 */
OrganizationAddressInfo.prototype['address'] = undefined;
/**
 * The sub-premise of the organization location
 * @member {String} address_subpremise
 */
OrganizationAddressInfo.prototype['address_subpremise'] = undefined;
/**
 * The street number of the organization location
 * @member {String} address_street_number
 */
OrganizationAddressInfo.prototype['address_street_number'] = undefined;
/**
 * The route of the organization location
 * @member {String} address_route
 */
OrganizationAddressInfo.prototype['address_route'] = undefined;
/**
 * The sub-locality of the organization location
 * @member {String} address_sublocality
 */
OrganizationAddressInfo.prototype['address_sublocality'] = undefined;
/**
 * The locality of the organization location
 * @member {String} address_locality
 */
OrganizationAddressInfo.prototype['address_locality'] = undefined;
/**
 * The level 1 admin area of the organization location
 * @member {String} address_admin_area_level_1
 */
OrganizationAddressInfo.prototype['address_admin_area_level_1'] = undefined;
/**
 * The level 2 admin area of the organization location
 * @member {String} address_admin_area_level_2
 */
OrganizationAddressInfo.prototype['address_admin_area_level_2'] = undefined;
/**
 * The country of the organization location
 * @member {String} address_country
 */
OrganizationAddressInfo.prototype['address_country'] = undefined;
/**
 * The postal code of the organization location
 * @member {String} address_postal_code
 */
OrganizationAddressInfo.prototype['address_postal_code'] = undefined;
/**
 * The formatted organization location
 * @member {String} address_formatted_address
 */
OrganizationAddressInfo.prototype['address_formatted_address'] = undefined;
// Implement OrganizationsCollectionResponseObjectAllOf interface:
/**
 * The ID of the organization
 * @member {Number} id
 */
OrganizationsCollectionResponseObjectAllOf.prototype['id'] = undefined;
/**
 * Whether the organization is active or not
 * @member {Boolean} active_flag
 */
OrganizationsCollectionResponseObjectAllOf.prototype['active_flag'] = undefined;
/**
 * The ID of the owner
 * @member {Number} owner_id
 */
OrganizationsCollectionResponseObjectAllOf.prototype['owner_id'] = undefined;
/**
 * The name of the organization
 * @member {String} name
 */
OrganizationsCollectionResponseObjectAllOf.prototype['name'] = undefined;
/**
 * The last updated date and time of the organization. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} update_time
 */
OrganizationsCollectionResponseObjectAllOf.prototype['update_time'] = undefined;
/**
 * The date and time this organization was deleted. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} delete_time
 */
OrganizationsCollectionResponseObjectAllOf.prototype['delete_time'] = undefined;
/**
 * The date and time when the organization was added/created. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} add_time
 */
OrganizationsCollectionResponseObjectAllOf.prototype['add_time'] = undefined;
/**
 * The visibility group ID of who can see the organization
 * @member {String} visible_to
 */
OrganizationsCollectionResponseObjectAllOf.prototype['visible_to'] = undefined;
/**
 * The label assigned to the organization. When the `label` field is updated, the `label_ids` field value will be overwritten by the `label` field value.
 * @member {Number} label
 */
OrganizationsCollectionResponseObjectAllOf.prototype['label'] = undefined;
/**
 * The IDs of labels assigned to the organization. When the `label_ids` field is updated, the `label` field value will be set to the first value of the `label_ids` field.
 * @member {Array.<Number>} label_ids
 */
OrganizationsCollectionResponseObjectAllOf.prototype['label_ids'] = undefined;
/**
 * The BCC email associated with the organization
 * @member {String} cc_email
 */
OrganizationsCollectionResponseObjectAllOf.prototype['cc_email'] = undefined;




export default OrganizationsCollectionResponseObject;

