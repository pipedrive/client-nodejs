/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Owner from './Owner';
import PictureDataWithValue from './PictureDataWithValue';

/**
 * The BaseOrganizationItemFields model module.
 * @module model/BaseOrganizationItemFields
 * @version 1.0.0
 */
class BaseOrganizationItemFields {
    /**
     * Constructs a new <code>BaseOrganizationItemFields</code>.
     * @alias module:model/BaseOrganizationItemFields
     */
    constructor() { 
        
        BaseOrganizationItemFields.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BaseOrganizationItemFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseOrganizationItemFields} obj Optional instance to populate.
     * @return {module:model/BaseOrganizationItemFields} The populated <code>BaseOrganizationItemFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BaseOrganizationItemFields();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');

                delete data['id'];
            }
            if (data.hasOwnProperty('company_id')) {
                obj['company_id'] = ApiClient.convertToType(data['company_id'], 'Number');

                delete data['company_id'];
            }
            if (data.hasOwnProperty('owner_id')) {
                obj['owner_id'] = Owner.constructFromObject(data['owner_id']);

                delete data['owner_id'];
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');

                delete data['name'];
            }
            if (data.hasOwnProperty('active_flag')) {
                obj['active_flag'] = ApiClient.convertToType(data['active_flag'], 'Boolean');

                delete data['active_flag'];
            }
            if (data.hasOwnProperty('picture_id')) {
                obj['picture_id'] = PictureDataWithValue.constructFromObject(data['picture_id']);

                delete data['picture_id'];
            }
            if (data.hasOwnProperty('country_code')) {
                obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');

                delete data['country_code'];
            }
            if (data.hasOwnProperty('first_char')) {
                obj['first_char'] = ApiClient.convertToType(data['first_char'], 'String');

                delete data['first_char'];
            }
            if (data.hasOwnProperty('add_time')) {
                obj['add_time'] = ApiClient.convertToType(data['add_time'], 'String');

                delete data['add_time'];
            }
            if (data.hasOwnProperty('update_time')) {
                obj['update_time'] = ApiClient.convertToType(data['update_time'], 'String');

                delete data['update_time'];
            }
            if (data.hasOwnProperty('visible_to')) {
                obj['visible_to'] = ApiClient.convertToType(data['visible_to'], 'String');

                delete data['visible_to'];
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'Number');

                delete data['label'];
            }
            if (data.hasOwnProperty('owner_name')) {
                obj['owner_name'] = ApiClient.convertToType(data['owner_name'], 'String');

                delete data['owner_name'];
            }
            if (data.hasOwnProperty('cc_email')) {
                obj['cc_email'] = ApiClient.convertToType(data['cc_email'], 'String');

                delete data['cc_email'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * The ID of the organization
 * @member {Number} id
 */
BaseOrganizationItemFields.prototype['id'] = undefined;

/**
 * The ID of the company related to the organization
 * @member {Number} company_id
 */
BaseOrganizationItemFields.prototype['company_id'] = undefined;

/**
 * @member {module:model/Owner} owner_id
 */
BaseOrganizationItemFields.prototype['owner_id'] = undefined;

/**
 * The name of the organization
 * @member {String} name
 */
BaseOrganizationItemFields.prototype['name'] = undefined;

/**
 * Whether the organization is active or not
 * @member {Boolean} active_flag
 */
BaseOrganizationItemFields.prototype['active_flag'] = undefined;

/**
 * @member {module:model/PictureDataWithValue} picture_id
 */
BaseOrganizationItemFields.prototype['picture_id'] = undefined;

/**
 * The country code of the organization
 * @member {String} country_code
 */
BaseOrganizationItemFields.prototype['country_code'] = undefined;

/**
 * The first character of the organization name
 * @member {String} first_char
 */
BaseOrganizationItemFields.prototype['first_char'] = undefined;

/**
 * The creation date and time of the organization
 * @member {String} add_time
 */
BaseOrganizationItemFields.prototype['add_time'] = undefined;

/**
 * The last updated date and time of the organization
 * @member {String} update_time
 */
BaseOrganizationItemFields.prototype['update_time'] = undefined;

/**
 * The visibility group ID of who can see the organization
 * @member {String} visible_to
 */
BaseOrganizationItemFields.prototype['visible_to'] = undefined;

/**
 * The ID of the label
 * @member {Number} label
 */
BaseOrganizationItemFields.prototype['label'] = undefined;

/**
 * The name of the organization owner
 * @member {String} owner_name
 */
BaseOrganizationItemFields.prototype['owner_name'] = undefined;

/**
 * The BCC email of the organization
 * @member {String} cc_email
 */
BaseOrganizationItemFields.prototype['cc_email'] = undefined;






export default BaseOrganizationItemFields;

