/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
* 
* @export
* @interface GetDealsProductsResponseDataInnerAllOf
*/
export interface GetDealsProductsResponseDataInnerAllOf {
    /**
    * The ID of the deal-product (the ID of the product attached to the deal)
    * @type {number}
    */
    'id'?: number;
    /**
    * The sum of all the products attached to the deal
    * @type {number}
    */
    'sum'?: number;
    /**
    * The product tax
    * @type {number}
    */
    'tax'?: number;
    /**
    * The ID of the deal
    * @type {number}
    */
    'deal_id'?: number;
    /**
    * The product name
    * @type {string}
    */
    'name'?: string;
    /**
    * The ID of the product
    * @type {number}
    */
    'product_id'?: number;
    /**
    * The ID of the product variation
    * @type {number}
    */
    'product_variation_id'?: number | null;
    /**
    * The date and time when the product was added to the deal
    * @type {string}
    */
    'add_time'?: string;
    /**
    * The date and time when the deal product was last updated
    * @type {string}
    */
    'update_time'?: string;
    /**
    * The comments of the product
    * @type {string}
    */
    'comments'?: string;
    /**
    * The currency associated with the deal product
    * @type {string}
    */
    'currency'?: string;
    /**
    * The value of the discount. The `discount_type` field can be used to specify whether the value is an amount or a percentage
    * @type {number}
    */
    'discount'?: number;
    /**
    * The type of the discount\'s value
    * @type {string}
    */
    'discount_type'?: GetDealsProductsResponseDataInnerAllOfDiscountTypeConst;
    /**
    * The quantity of the product
    * @type {number}
    */
    'quantity'?: number;
    /**
    * The price value of the product
    * @type {number}
    */
    'item_price'?: number;
    /**
    * The tax option to be applied to the products. When using `inclusive`, the tax percentage will already be included in the price. When using `exclusive`, the tax will not be included in the price. When using `none`, no tax will be added. Use the `tax` field for defining the tax percentage amount. By default, the user setting value for tax options will be used. Changing this in one product affects the rest of the products attached to the deal
    * @type {string}
    */
    'tax_method'?: GetDealsProductsResponseDataInnerAllOfTaxMethodConst;
    /**
    * Whether this product is enabled for the deal
    * @type {boolean}
    */
    'is_enabled'?: boolean;
}

                export const GetDealsProductsResponseDataInnerAllOfDiscountTypeConst = {
                        percentage: 'percentage',
                        amount: 'amount'
                } as const;

                export type GetDealsProductsResponseDataInnerAllOfDiscountTypeConst = typeof GetDealsProductsResponseDataInnerAllOfDiscountTypeConst[keyof typeof GetDealsProductsResponseDataInnerAllOfDiscountTypeConst];
                export const GetDealsProductsResponseDataInnerAllOfTaxMethodConst = {
                        exclusive: 'exclusive',
                        inclusive: 'inclusive',
                        none: 'none'
                } as const;

                export type GetDealsProductsResponseDataInnerAllOfTaxMethodConst = typeof GetDealsProductsResponseDataInnerAllOfTaxMethodConst[keyof typeof GetDealsProductsResponseDataInnerAllOfTaxMethodConst];


